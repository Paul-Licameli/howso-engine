(seq
	#howso (null)
	(direct_assign_to_entities (assoc howso (load "../howso.amlg")))
	(assign_to_entities (assoc filepath "../"))

	(call create_trainee (assoc trainee "model"))
	(call set_internal_parameters (assoc
		trainee "model"
		hyperparameter_map (assoc ".targetless" (assoc "robust" (assoc ".none" (assoc "k" 8 "p" 2 "dt" -1))))
	))

	(declare (assoc
		;set to true to see full output
		verbose (false)
		;set to null to do full model
		submodel_size (null)

		data (load "performance_data/OnlineRetail.csv")
	))

	(declare (assoc
		features (first data)
		training_data (tail data)
		start (system_time)
	))


	(call set_feature_attributes (assoc
		trainee "model"
		features
			(assoc
				"InvoiceNo" (assoc "type" "nominal")
				"StockCode" (assoc "type" "nominal")
				"Description"  (assoc "type" "nominal")
				"CustomerID" (assoc "type" "nominal")
				"Country"  (assoc "type" "nominal")
				"Quantity" (assoc "type" "continuous")
				"UnitPrice" (assoc "type" "continuous")
				"InvoiceDate" (assoc "type" "continuous" "date_time_format" "%m/%d/%Y %H:%M")
			)
	))

	(if verbose (print "Loading model ...\n"))
	(call train (assoc
		trainee "model"
		features features
		input_cases (if submodel_size (trunc training_data submodel_size) training_data)
	))

	(print "Loaded Online Retail: "
		(get (call get_num_training_cases (assoc trainee "model")) (list "payload" "count"))
		"\n"
	)

	(declare (assoc load_time (- (system_time) start) ))
	(print "Load time: " load_time "\n")

	(assign (assoc start (system_time) ))

	(if verbose (print "residuals for model ...\n"))
	(call react_into_trainee (assoc
		trainee "model"
		context_features features
		num_samples 1000
		residuals_robust (true)
	))

	(declare (assoc residuals_time (- (system_time) start) ))
	(print "Residuals time: " residuals_time "\n")

	(assign (assoc start (system_time) ))

	||(map
		(lambda (seq
			(call react (assoc
				trainee "model"
				action_features features
				desired_conviction 2
				use_regional_model_residuals (false)
			))

			(if verbose
				(if (= 0 (mod (target_index) 100))
					(print (target_index) "\n")

					(= 0 (mod (target_index) 10))
					(print (target_index) " ")
				)
			)
		))

		(range 1 2000)
	)

	(declare (assoc generate_time (- (system_time) start) ))
	(if verbose (print "test time: " generate_time "\n"))

	(print "Generate time: " generate_time "\n")
	(print "Online Retail\n- - - - - \n")

	(destroy_entities "model")
)
